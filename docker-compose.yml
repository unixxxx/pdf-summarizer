services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: doculearn_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: doculearn
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    container_name: doculearn_ollama
    ports:
      - '11434:11434'
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]

  redis:
    image: redis:7-alpine
    container_name: doculearn_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5

  worker:
    build:
      context: ./apps/worker
      dockerfile: Dockerfile
    container_name: doculearn_worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - WORKER_NAME=doculearn-worker
      - REDIS_URL=redis://redis:6379/0
      - API_BASE_URL=http://backend:8000
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/pdf_summarizer
      - LLM_PROVIDER=${LLM_PROVIDER:-ollama}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama2}
      - LOG_LEVEL=INFO
    volumes:
      - ./apps/worker:/app
      - /tmp/doculearn/uploads:/tmp/doculearn/uploads
    networks:
      - default
    restart: unless-stopped
    command: python -m src

volumes:
  postgres_data:
  ollama_data:
  redis_data:
